
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.22.0
 * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
 */
Prisma.prismaVersion = {
  client: "5.22.0",
  engine: "605197351a3c8bdd595af2d2a9bc3025bca48ea2"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.KycVerificationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  applicant_id: 'applicant_id',
  correlation_id: 'correlation_id',
  created_at: 'created_at',
  error_message: 'error_message',
  event_timestamp: 'event_timestamp',
  external_user_id: 'external_user_id',
  inspection_id: 'inspection_id',
  processing_status: 'processing_status',
  raw_data: 'raw_data',
  review_result: 'review_result',
  review_status: 'review_status',
  signature_valid: 'signature_valid',
  updated_at: 'updated_at',
  user_id: 'user_id',
  webhook_type: 'webhook_type'
};

exports.Prisma.KycDocumentScalarFieldEnum = {
  id: 'id',
  applicant_id: 'applicant_id',
  country: 'country',
  created_at: 'created_at',
  document_id: 'document_id',
  document_sub_type: 'document_sub_type',
  document_type: 'document_type',
  field_name: 'field_name',
  file_name: 'file_name',
  file_path: 'file_path',
  file_type: 'file_type',
  file_url: 'file_url',
  id_doc_type: 'id_doc_type',
  issued_date: 'issued_date',
  number: 'number',
  page_type: 'page_type',
  record_id: 'record_id',
  status: 'status',
  updated_at: 'updated_at',
  user_id: 'user_id',
  valid_until: 'valid_until'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  department: 'department',
  position: 'position',
  last_login: 'last_login'
};

exports.Prisma.AuthproviderScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  provider_name: 'provider_name',
  provider_user_id: 'provider_user_id',
  provider_data: 'provider_data',
  created_at: 'created_at',
  last_used: 'last_used'
};

exports.Prisma.DidwalletScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  wallet_address: 'wallet_address',
  did: 'did',
  is_primary: 'is_primary',
  created_at: 'created_at',
  last_used: 'last_used'
};

exports.Prisma.InvestorScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  investor_type: 'investor_type',
  accreditation_status: 'accreditation_status',
  accreditation_date: 'accreditation_date',
  kyc_documents: 'kyc_documents',
  aml_documents: 'aml_documents',
  kyc_verified: 'kyc_verified',
  aml_verified: 'aml_verified'
};

exports.Prisma.IssuerScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  company_name: 'company_name',
  company_registration_number: 'company_registration_number',
  jurisdiction: 'jurisdiction',
  verification_status: 'verification_status',
  verification_date: 'verification_date',
  company_documents: 'company_documents',
  is_active: 'is_active',
  is_kyb_completed: 'is_kyb_completed',
  mobile_number: 'mobile_number',
  platform_client_id: 'platform_client_id',
  registration_date: 'registration_date',
  sumsub_applicant_id: 'sumsub_applicant_id',
  sumsub_correlation_id: 'sumsub_correlation_id',
  sumsub_external_id: 'sumsub_external_id',
  sumsub_inspection_id: 'sumsub_inspection_id',
  did: 'did',
  did_created_at: 'did_created_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Kyc_address_infoScalarFieldEnum = {
  id: 'id',
  applicant_id: 'applicant_id',
  address_type: 'address_type',
  is_primary: 'is_primary',
  street: 'street',
  street_line2: 'street_line2',
  city: 'city',
  state: 'state',
  postal_code: 'postal_code',
  country: 'country',
  is_verified: 'is_verified',
  verification_method: 'verification_method',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Kyc_addressesScalarFieldEnum = {
  id: 'id',
  record_id: 'record_id',
  address_type: 'address_type',
  is_primary: 'is_primary',
  street: 'street',
  street_line_2: 'street_line_2',
  city: 'city',
  state: 'state',
  postal_code: 'postal_code',
  country: 'country',
  is_verified: 'is_verified',
  updated_at: 'updated_at',
  created_at: 'created_at'
};

exports.Prisma.Kyc_applicantsScalarFieldEnum = {
  id: 'id',
  applicant_id: 'applicant_id',
  user_id: 'user_id',
  external_user_id: 'external_user_id',
  inspection_id: 'inspection_id',
  correlation_id: 'correlation_id',
  status: 'status',
  result: 'result',
  id_doc_status: 'id_doc_status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  sandbox_mode: 'sandbox_mode',
  personal_info_id: 'personal_info_id'
};

exports.Prisma.Kyc_audit_logScalarFieldEnum = {
  id: 'id',
  applicant_id: 'applicant_id',
  action: 'action',
  performed_by: 'performed_by',
  details: 'details',
  timestamp: 'timestamp'
};

exports.Prisma.Kyc_complete_recordsScalarFieldEnum = {
  id: 'id',
  applicant_id: 'applicant_id',
  user_id: 'user_id',
  status: 'status',
  result: 'result',
  complete_data: 'complete_data',
  collected_at: 'collected_at',
  updated_at: 'updated_at',
  created_at: 'created_at'
};

exports.Prisma.Kyc_personal_infoScalarFieldEnum = {
  id: 'id',
  applicant_id: 'applicant_id',
  record_id: 'record_id',
  first_name: 'first_name',
  last_name: 'last_name',
  middle_name: 'middle_name',
  full_name: 'full_name',
  legal_name: 'legal_name',
  gender: 'gender',
  date_of_birth: 'date_of_birth',
  place_of_birth: 'place_of_birth',
  country_of_birth: 'country_of_birth',
  state_of_birth: 'state_of_birth',
  nationality: 'nationality',
  phone: 'phone',
  email: 'email',
  country: 'country',
  tax_residence_country: 'tax_residence_country',
  tax_identification_number: 'tax_identification_number',
  id_number: 'id_number',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Kyc_raw_dataScalarFieldEnum = {
  id: 'id',
  applicant_id: 'applicant_id',
  data_type: 'data_type',
  source: 'source',
  raw_data: 'raw_data',
  created_at: 'created_at'
};

exports.Prisma.Kyc_verification_eventsScalarFieldEnum = {
  id: 'id',
  record_id: 'record_id',
  type: 'type',
  review_status: 'review_status',
  review_result: 'review_result',
  inspection_id: 'inspection_id',
  event_data: 'event_data',
  event_timestamp: 'event_timestamp',
  created_at: 'created_at'
};

exports.Prisma.Kyc_verification_historyScalarFieldEnum = {
  id: 'id',
  applicant_id: 'applicant_id',
  type: 'type',
  review_status: 'review_status',
  review_result: 'review_result',
  review_answer: 'review_answer',
  reject_type: 'reject_type',
  reject_labels: 'reject_labels',
  timestamp: 'timestamp',
  created_at: 'created_at'
};

exports.Prisma.RefreshtokenScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  token: 'token',
  expires_at: 'expires_at',
  created_at: 'created_at',
  device_info: 'device_info'
};

exports.Prisma.UserroleScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  role: 'role',
  created_at: 'created_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  first_name: 'first_name',
  last_name: 'last_name',
  created_at: 'created_at',
  updated_at: 'updated_at',
  applicant_id: 'applicant_id',
  is_verified: 'is_verified',
  verification_result: 'verification_result'
};

exports.Prisma.WalletScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  issuer_id: 'issuer_id',
  address: 'address',
  chain: 'chain',
  type: 'type',
  provider: 'provider',
  did: 'did',
  created_at: 'created_at',
  updated_at: 'updated_at',
  credentials: 'credentials'
};

exports.Prisma.WebhookLogScalarFieldEnum = {
  id: 'id',
  type: 'type',
  payload: 'payload',
  signature: 'signature',
  status: 'status',
  provider: 'provider',
  processed: 'processed',
  processed_at: 'processed_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Issuer_credentialsScalarFieldEnum = {
  id: 'id',
  issuer_id: 'issuer_id',
  credential_id: 'credential_id',
  credential_type: 'credential_type',
  issued_date: 'issued_date',
  expiry_date: 'expiry_date',
  status: 'status',
  metadata: 'metadata',
  created_at: 'created_at',
  updated_at: 'updated_at',
  token_id: 'token_id',
  contract_address: 'contract_address',
  chain: 'chain',
  transaction_hash: 'transaction_hash',
  image_url: 'image_url'
};

exports.Prisma.Issuer_credential_typeScalarFieldEnum = {
  id: 'id',
  applicant_id: 'applicant_id',
  user_id: 'user_id',
  first_name: 'first_name',
  last_name: 'last_name',
  email: 'email',
  date_of_birth: 'date_of_birth',
  verification_date: 'verification_date',
  verification_status: 'verification_status',
  review_result: 'review_result',
  country_of_residence: 'country_of_residence',
  source: 'source',
  did: 'did',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  kycVerification: 'kycVerification',
  KycDocument: 'KycDocument',
  admin: 'admin',
  authprovider: 'authprovider',
  didwallet: 'didwallet',
  investor: 'investor',
  issuer: 'issuer',
  kyc_address_info: 'kyc_address_info',
  kyc_addresses: 'kyc_addresses',
  kyc_applicants: 'kyc_applicants',
  kyc_audit_log: 'kyc_audit_log',
  kyc_complete_records: 'kyc_complete_records',
  kyc_personal_info: 'kyc_personal_info',
  kyc_raw_data: 'kyc_raw_data',
  kyc_verification_events: 'kyc_verification_events',
  kyc_verification_history: 'kyc_verification_history',
  refreshtoken: 'refreshtoken',
  userrole: 'userrole',
  users: 'users',
  wallet: 'wallet',
  webhookLog: 'webhookLog',
  issuer_credentials: 'issuer_credentials',
  issuer_credential_type: 'issuer_credential_type'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
